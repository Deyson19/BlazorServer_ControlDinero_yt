@inject IControlDineroService _controlDinero
@inject NavigationManager _nav
@inject IToastService _toast
@inject SweetAlertService _swal


@code {
    //*Recibir parámetro del padre*/
    //*Parámetro de entrada*/
    [Parameter, EditorRequired]
    public List<ControlDinero> listado { get; set; } = new();

    //*Parámetro de salida, informar al componente padre*/
    [Parameter]
    public EventCallback<bool> wasRemoved { get; set; }


    private async Task onRemove(int id)
    {
        var swalDialog = await _swal.FireAsync(new SweetAlertOptions
            {
                Title = "Eliminar",
                Text = "¿Estas seguro de eliminar?",
                Icon = SweetAlertIcon.Question,
                ConfirmButtonText = "Eliminar",
                CancelButtonText = "Cancelar",
                ShowConfirmButton = true
            });
        if (swalDialog.IsConfirmed)
        {
            var eliminar = await _controlDinero.Eliminar(id);
            if (eliminar)
            {
                _toast.ShowSuccess("Se ha eliminado el registro");
                await wasRemoved.InvokeAsync(true);
            }
            else
            {
                _toast.ShowError("No se pudo eliminar el registro.");
            }
        }
        await Task.Delay(2000);
        _nav.NavigateTo("/control", false, true);
    }
}
<div class="container">
    <table class="table table-striped table-hover table-secondary">
        <tr>
            <th>
                Descripción
            </th>
            <th>
                Tipo
            </th>
            <th>
                Valor
            </th>
            <th>
                Fecha Registro
            </th>
            <th>Acciones</th>
        </tr>
        <tbody>
            @foreach (var item in listado)
            {
                <tr>
                    <td>
                        @item.Descripcion
                    </td>
                    <td>
                        @if (item.EsIngreso == true)
                        {
                            <p class="text-primary bg-transparent">Ingresos</p>
                        }
                        else
                        {
                            <p class="text-white bg-danger border-2">Egreso</p>
                        }
                    </td>
                    <td>
                        @item.Valor
                    </td>
                    <td>
                        @item.FechaIngreso.ToString("d")
                    </td>
                    <th class="mb-2">
                    <td class="d-flex justify-content-around">
                        <a class="btn btn-outline-primary btn-sm" href="control/detalle/@item.Id">
                            <i class="fas fa-regular fa-eye"></i>
                        </a>
                        <a class="btn btn-outline-danger btn-sm" onclick="@(async ()=>onRemove(item.Id))">
                            <i class="fas fa-trash-alt"></i>
                        </a>
                        <a class="btn btn-outline-success btn-sm" href="control/upsert/@item.Id.ToString()">
                            <i class="fas fa-pencil"></i>
                        </a>
                    </td>
                    </th>
                </tr>
            }
        </tbody>
    </table>
</div>